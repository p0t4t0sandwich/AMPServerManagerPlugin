plugins {
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'fabric-loom' version '1.0-SNAPSHOT'
    id 'maven-publish'
    id 'java'
}

group = 'ca.sperrer.p0t4t0sandwich'
version = '1.0.1'

repositories {
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven { url 'https://jitpack.io' }
    jcenter()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
}

dependencies {
    // General dependencies
    shadow "dev.dejvokep:boosted-yaml:1.3"
    shadow 'com.github.p0t4t0sandwich:ampapi-java:ampapi-1.0.3'
    shadow 'com.google.code.gson:gson:2.8.6'

    // Spigot
    compileOnly "org.spigotmc:spigot-api:1.8-R0.1-SNAPSHOT"

    // Folia
    compileOnly "dev.folia:folia-api:1.19.4-R0.1-SNAPSHOT"

    // Paper
    compileOnly "io.papermc.paper:paper-api:1.19.4-R0.1-SNAPSHOT"

    // BungeeCord
    compileOnly 'net.md-5:bungeecord-api:1.19-R0.1-SNAPSHOT'

    // Fabric
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
}

shadowJar {
    classifier = 'shaded'
    configurations = [project.configurations.runtimeClasspath, project.configurations.shadow]
    dependencies {
        include dependency("dev.dejvokep:boosted-yaml:1.3")
        include dependency("com.github.p0t4t0sandwich:ampapi-java:ampapi-1.0.3")
    }
}
tasks.build.dependsOn(shadowJar)

def targetJavaVersion = 8
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }

    // Fabric
    archivesBaseName = project.archives_base_name
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

java.disableAutoTargetJvm()

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }

    // BungeeCord
    filesMatching('bungee.yml') {
        expand props
    }

    // Fabric
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    inputs.property "version", project.version
    inputs.property "minecraft_version", project.minecraft_version
    inputs.property "loader_version", project.loader_version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "minecraft_version": project.minecraft_version,
                "loader_version": project.loader_version
    }
}

